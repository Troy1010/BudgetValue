// Generated by Dagger (https://dagger.dev).
package com.tminus1010.budgetvalue._core.data;

import dagger.internal.Factory;
import javax.inject.Provider;

@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class Repo_Factory implements Factory<Repo> {
  private final Provider<SharedPrefWrapper> sharedPrefWrapperProvider;

  private final Provider<MiscDAO> miscDAOProvider;

  private final Provider<UserCategoriesDAO> userCategoriesDAOProvider;

  public Repo_Factory(Provider<SharedPrefWrapper> sharedPrefWrapperProvider,
      Provider<MiscDAO> miscDAOProvider, Provider<UserCategoriesDAO> userCategoriesDAOProvider) {
    this.sharedPrefWrapperProvider = sharedPrefWrapperProvider;
    this.miscDAOProvider = miscDAOProvider;
    this.userCategoriesDAOProvider = userCategoriesDAOProvider;
  }

  @Override
  public Repo get() {
    return newInstance(sharedPrefWrapperProvider.get(), miscDAOProvider.get(), userCategoriesDAOProvider.get());
  }

  public static Repo_Factory create(Provider<SharedPrefWrapper> sharedPrefWrapperProvider,
      Provider<MiscDAO> miscDAOProvider, Provider<UserCategoriesDAO> userCategoriesDAOProvider) {
    return new Repo_Factory(sharedPrefWrapperProvider, miscDAOProvider, userCategoriesDAOProvider);
  }

  public static Repo newInstance(SharedPrefWrapper sharedPrefWrapper, MiscDAO miscDAO,
      UserCategoriesDAO userCategoriesDAO) {
    return new Repo(sharedPrefWrapper, miscDAO, userCategoriesDAO);
  }
}
